name: Deploy Logic App - Durable Function Sample

on: 
 workflow_dispatch:
  inputs:
      # Change this value
      resource_group:
        description: 'Resource Group Name'
        required: true
        default: 'rg-sharepoint-to-blob'
      storage_name:
        description: 'Name for storage account'
        required: true
        default: 'sharepointtoblobstg'
      function_app_name:
        description: 'Name for function app to be created'
        required: true
        default: 'SharePoint-to-blob-functionapp'
      region:
        description: 'Azure deployment region'
        required: true
        default: 'eastus'
      container_name:
        description: 'Name of storage container to store blobs'
        required: true
        default: 'sharepointfiletransfer'
      app_plan_name:
        description: 'Name of App Plan'
        required: true
        default: 'SharePoint-to-blob-App-Service-Plan'
env:
  
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: 6.0.x
  OUTPUT_PATH: ${{ github.workspace }}/.output


jobs:

 build-function:
      runs-on: ubuntu-latest
      steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish Functions
        run: dotnet publish SharePointFileToBlob.csproj --configuration Release --output ${{ env.OUTPUT_PATH }}

      - name: Package Functions
        uses: actions/upload-artifact@v3
        with:
          name: functions
          path: ${{ env.OUTPUT_PATH }}
 
 build-infra:
    runs-on: ubuntu-latest
    needs: [build-function]
    env:
      ResourceGroupName: ${{ github.event.inputs.resource_group }}
      ResourceGroupLocation: "eastus"
    steps:
    - uses: actions/checkout@master
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: Azure/CLI@v1
      with:
        inlineScript: |
          #!/bin/bash
          az group create --name ${{ env.ResourceGroupName }} --location ${{ env.ResourceGroupLocation }}
          echo "Azure resource group created"
    
    - uses: azure/arm-deploy@v1
      with:
        resourceGroupName: ${{ env.ResourceGroupName }}
        template: ./scripts/template.json
        parameters: sites_SharePoint_to_blob_functionapp1_name=${{ github.event.inputs.function_app_name }} storageAccounts_sharepointtoblobstg1_name=${{ github.event.inputs.storage_name }} serverfarms_SharePoint_to_blob_App_Service_Plan_name=${{ github.event.inputs.app_plan_name }}
       
        # Authentication
        # Set up the following secrets in your repository: AZURE_CREDENTIALS
        # For details see https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure
    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
            enable-AzPSSession: true
    
    - name: 'Get resource group with PowerShell action 2'
      uses: azure/powershell@v1
      with:
             inlineScript: |
               ./scripts/set-permissions.ps1
             azPSVersion: "latest"
      env:
          RESOURCE_GROUP_NAME: ${{ github.event.inputs.resource_group }}
          STORAGE_NAME: ${{ github.event.inputs.storage_name }}
          FUNCTION_APP_NAME: ${{ github.event.inputs.function_app_name }}
          REGION: ${{ github.event.inputs.region }}
          CONTAINER_NAME : ${{ github.event.inputs.container_name }}

 deploy:
      runs-on: ubuntu-latest
      needs: [build-infra]
      env:
        FUNC_APP_NAME: ${{ github.event.inputs.function_app_name }}

      steps:
        - name: Download Artifact
          uses: actions/download-artifact@v1
          with:
            name: functions
            path: ${{ env.OUTPUT_PATH }}

        - name: "Login via Azure CLI"
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: Deploy Function to Azure
          uses: Azure/functions-action@v1
          with:
            app-name: ${{ github.event.inputs.function_app_name }}
            package:  ${{ env.OUTPUT_PATH }}